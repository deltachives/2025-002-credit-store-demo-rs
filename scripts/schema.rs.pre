#[derive(diesel_derive_enum::DbEnum, Debug, strum::VariantArray, Clone)]
pub enum EventAction {
    Insert,
    Update,
    Delete,
    Open,
    Close,
    Reopen,
}

#[derive(diesel_derive_enum::DbEnum, Debug, strum::VariantArray, Clone)]
pub enum ObjState {
    Insert,
    Update,
    Delete,
}

impl From<ObjState> for EventAction {
    fn from(value: ObjState) -> Self {
        match value {
            ObjState::Insert => Self::Insert,
            ObjState::Update => Self::Update,
            ObjState::Delete => Self::Delete,
        }
    }
}